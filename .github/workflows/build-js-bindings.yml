name: JS Bindings CI
env:
  DEBUG: napi:*
  APP_NAME: "@chroma/chromadb-js-bindings"
  MACOSX_DEPLOYMENT_TARGET: '10.13'
permissions:
  contents: write
  id-token: write
'on':
  workflow_dispatch: {}
  workflow_call: {}
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: yarn build --target x86_64-apple-darwin
          - host: windows-latest
            build: yarn build --target x86_64-pc-windows-msvc
            target: x86_64-pc-windows-msvc
          - host: depot-ubuntu-22.04-16
            target: x86_64-unknown-linux-gnu
            build: yarn build --target x86_64-unknown-linux-gnu
          - host: macos-latest
            target: aarch64-apple-darwin
            build: yarn build --target aarch64-apple-darwin
          - host: depot-ubuntu-22.04-16
            target: aarch64-unknown-linux-gnu
            build: yarn build --target aarch64-unknown-linux-gnu
          - host: windows-latest
            target: aarch64-pc-windows-msvc
            build: yarn build --target aarch64-pc-windows-msvc
    name: stable - ${{ matrix.settings.target }} - node@20
    runs-on: ${{ matrix.settings.host }}
    defaults:
      run:
        working-directory: rust/js_bindings
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          cache-dependency-path: rust/js_bindings/yarn.lock
      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            rust/js_bindings/.cargo-cache
            rust/js_bindings/target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}
      - uses: goto-bus-stop/setup-zig@v2
        if: ${{ matrix.settings.target == 'armv7-unknown-linux-gnueabihf' || matrix.settings.target == 'armv7-unknown-linux-musleabihf' }}
        with:
          version: 0.13.0
      - name: Install dependencies
        run: yarn install
      - name: Build
        run: ${{ matrix.settings.build }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: rust/js_bindings/chromadb-js-bindings.*.node
          if-no-files-found: error
  publish:
    name: Publish
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust/js_bindings
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          cache-dependency-path: rust/js_bindings/yarn.lock
      - name: Install dependencies
        run: yarn install
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Move artifacts
        run: yarn artifacts
      - name: List packages
        run: ls -R ./npm
        shell: bash
      - name: Publish
        run: |
          npm config set provenance true
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc          
          for dir in npm/*; do
            if [ -d "$dir" ]; then
              cd "$dir" && npm publish --access public && cd -
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}